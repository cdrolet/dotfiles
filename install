#!/usr/bin/env bash
########################################################################################
# One-liner Installation Script
# Usage: curl -fsSL https://raw.githubusercontent.com/cdrolet/dotfiles/main/install | bash
########################################################################################

set -e

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Configuration
DOTFILES_REPO="https://github.com/cdrolet/dotfiles.git"
DOTFILES_DIR="$HOME/project/dotfiles"

# Helper functions
print_step() {
    echo -e "${BLUE}==>${NC} $1"
}

print_success() {
    echo -e "${GREEN}✓${NC} $1"
}

print_error() {
    echo -e "${RED}✗${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}⚠${NC} $1"
}

# Check if running on macOS
if [[ "$OSTYPE" != "darwin"* ]]; then
    print_error "This installer is designed for macOS only."
    exit 1
fi

echo ""
echo "╔════════════════════════════════════════╗"
echo "║   Dotfiles Installation Script         ║"
echo "╔════════════════════════════════════════╝"
echo ""

# Check for Command Line Tools
print_step "Checking for Xcode Command Line Tools..."
if ! xcode-select -p &> /dev/null; then
    print_warning "Command Line Tools not found. Installing..."
    xcode-select --install
    print_warning "Please complete the installation in the dialog that appeared."
    print_warning "After installation completes, run this script again."
    exit 0
else
    print_success "Command Line Tools installed"
fi

# Check for git
print_step "Checking for git..."
if ! command -v git &> /dev/null; then
    print_error "git not found. Please install Command Line Tools."
    exit 1
fi
print_success "git is available"

# Create project directory
print_step "Creating project directory..."
mkdir -p "$HOME/project"
print_success "Project directory ready"

# Clone or update repository
if [ -d "$DOTFILES_DIR" ]; then
    print_warning "Dotfiles directory already exists at $DOTFILES_DIR"
    read -p "Do you want to update it? (y/N): " -n 1 -r
    echo
    if [[ $REPLY =~ ^[Yy]$ ]]; then
        print_step "Updating dotfiles repository..."
        cd "$DOTFILES_DIR"
        git pull origin main
        print_success "Repository updated"
    else
        print_step "Using existing repository"
    fi
else
    print_step "Cloning dotfiles repository..."
    git clone "$DOTFILES_REPO" "$DOTFILES_DIR"
    print_success "Repository cloned"
fi

# Run the main installation script
print_step "Running main installation script..."
echo ""
cd "$DOTFILES_DIR"
./scripts/sh/install.sh "$@"

echo ""
print_success "Installation complete!"
echo ""
echo "Next steps:"
echo "  1. Close and reopen your terminal"
echo "  2. Or run: exec zsh"
echo ""
echo "Documentation: $DOTFILES_DIR/README.md"
echo ""

